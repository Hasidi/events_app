version: "3.9"

volumes:
  pgdata: {}


services:

  db:
    image: postgres:12
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    volumes:
        - ./data:/data

  events-app:
    build:
      context: .
      dockerfile: ./app/Dockerfile
    image: events_app
    ports:
      - "3000:5000"
    volumes:
      - './app/.:/app'
      - './common/common:/app/common'
    restart: always
    env_file: .env
    command: python service.py
    depends_on:
      - db
      - redis

  notifier:
    build:
      context: .
      dockerfile: ./notifier/Dockerfile
    image: events_notifier
    env_file: .env
    command: python main.py
    volumes:
      - './notifier:/notifier'
      - './common/common:/notifier/common'
    depends_on:
      - db
      - redis

  tests:
    build:
      context: .
      dockerfile: ./tests/Dockerfile
    image: tests_scheduler
    command: pytest -v tests_integration
    env_file: .env
    volumes:
      - './tests:/tests'
      - './common/common:/tests/common'
      - './notifier:/tests/notifier'
    depends_on:
      - db
      - redis
      - events-app
      - notifier
